events {
    worker_connections 1024;
}

http {
    upstream slack_server {
        server slack-server:3000;
    }

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/m;

    server {
        listen 80;
        server_name dev.div.tembol.co;

        # Redirect HTTP to HTTPS
        return 301 https://$server_name$request_uri;

    }

    # HTTPS server
    server {
        listen 443 ssl http2;
        server_name dev.div.tembol.co;

        ssl_certificate /etc/nginx/ssl/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/key.pem;
        
        # SSL configuration
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;

        location /slack/ {
            limit_req zone=api burst=5 nodelay;
            
            proxy_pass http://slack_server;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Configuraci√≥n para webhooks
            proxy_read_timeout 30s;
            proxy_connect_timeout 10s;
            proxy_send_timeout 10s;
        }

        location /health {
            proxy_pass http://slack_server;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Test endpoint (remove in production)
        location /test {
            proxy_pass http://slack_server;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location / {
            return 404;
        }
    }
}